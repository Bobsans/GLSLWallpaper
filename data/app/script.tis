var currentShader = null;

function self.ready() {
    view.LoadConfigs(function(settings) {
        $(#upsslider).value = $(#upsslidervalue).value = settings.UpdatesPerSecond;
        $(#fpsslider).value = $(#fpsslidervalue).value = settings.FramesPerSecond;
        $(#tsslider).value = $(#tsslidervalue).value = settings.TimeScale;
        $(#mousetoggle).checked = settings.MouseInteract;
        currentShader = settings.ShaderName;
    });
    view.LoadShaders(function(shaders) {
        for(var shader in shaders) {
            $(#shaderlist).append(<Shader title={shader.Name} author={shader.Author} image={shader.Image} value={shader.FileName}/>);
        }
    });
}

event change $(#upsslider) {
    view.ConfigSetInteger('UpdatesPerSecond', $(#upsslidervalue).value = this.value);
}

event change $(#fpsslider) {
    view.ConfigSetInteger('FramesPerSecond', $(#fpsslidervalue).value = this.value);
}

event change $(#tsslider) {
    view.ConfigSetDouble('TimeScale', $(#tsslidervalue).value = this.value);
}

event change $(#mousetoggle) {
    view.ConfigSetBoolean('MouseInteract', this.value);
}

event change $(.shader) {
    view.ConfigSetString('ShaderName', this.value);
}

function Shader(props) {
    var component = <div.shader {props.checked ? checked : ''} value={props.value}>
        <img src={props.image || 'no-image.png'}/>
        <div.info>
            <h2>{props.title || '-'}</h2>
            <div><b>Author:</b> {props.author || '-'}</div>
        </div>
    </div>;
    if (props.value === currentShader) {
        component[0].checked = true;
    }
    return component;
}
